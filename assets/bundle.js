!function(g){function I(A){if(C[A])return C[A].exports;var n=C[A]={i:A,l:!1,exports:{}};return g[A].call(n.exports,n,n.exports,I),n.l=!0,n.exports}var C={};I.m=g,I.c=C,I.i=function(g){return g},I.d=function(g,C,A){I.o(g,C)||Object.defineProperty(g,C,{configurable:!1,enumerable:!0,get:A})},I.n=function(g){var C=g&&g.__esModule?function(){return g.default}:function(){return g};return I.d(C,"a",C),C},I.o=function(g,I){return Object.prototype.hasOwnProperty.call(g,I)},I.p="",I(I.s=2)}([function(module,exports){eval("// removed by extract-text-webpack-plugin//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdHlsL21haW4uc3R5bD8yMjVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3R5bC9tYWluLnN0eWxcbi8vIG1vZHVsZSBpZCA9IDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){"use strict";eval("\nexports.__esModule = true;\nvar ImageWidget = (function () {\n    function ImageWidget(dom_id, inputName, images, group, multiply) {\n        var _this = this;\n        this.dom_id = dom_id;\n        this.inputName = inputName;\n        this.images = images;\n        this.group = group;\n        this.multiply = multiply;\n        this.chosenImages = [];\n        $('#' + this.dom_id + ' [name=\"' + this.inputName + '\"]').each(function (i, obj) {\n            _this.choseImage(parseInt($(obj).val()));\n        });\n        $('#' + this.dom_id).on('click', '.thumbnail.zoomable', function (evt) {\n            _this.zoom(parseInt($(evt.target).parents('.imagewidget-input-image').attr('data-id')));\n        });\n        $('#' + this.dom_id + ' input[type=file]').bootstrapFileInput();\n        $('#' + this.dom_id + ' .file-input-wrapper').removeClass('btn-default').addClass('btn-primary');\n        $('#' + this.dom_id + ' .imagewidget-add-image').on('click', function () {\n            _this.openLibrary();\n        });\n        $('#' + this.dom_id + ' .imagewidget-ok-btn').on('click', function () {\n            _this.closePopups();\n        });\n        $('#' + this.dom_id + ' input[type=file]').on('change', function (evt) {\n            evt.stopPropagation();\n            evt.preventDefault();\n            var files = evt.target.files;\n            $.each(files, function (key, value) {\n                var unique = Math.round(Math.random() * 1000);\n                var data = new FormData();\n                data.append(key, value);\n                data.append('group', _this.group);\n                var reader = new FileReader();\n                var image = $.Deferred();\n                reader.onload = function (e) {\n                    var skeleton = '<div class=\"loading col col-xs-6 col-sm-4 col-md-3 col-lg-2 imagewidget-input-image\" data-unique=\"' + unique + '\">' +\n                        '<div class=\"thumbnail\">' +\n                        '<img src=\"' + e.target.result + '\">' +\n                        '</div>' +\n                        '</div>';\n                    $('#' + _this.dom_id + ' .imagewidget-input .imagewidget-add-image').before(skeleton);\n                    image.resolve($('[data-unique=' + unique + ']'));\n                };\n                reader.readAsDataURL(value);\n                var ajaxOpts = {\n                    url: '/image/upload',\n                    type: 'POST',\n                    data: data,\n                    cache: false,\n                    dataType: 'json',\n                    processData: false,\n                    contentType: false,\n                    success: function (data, textStatus, jqXHR) {\n                        image.done(function (img) {\n                            img.removeClass('loading').removeClass('error').attr('data-id', data.id);\n                            _this.addImage(data);\n                            img.find('button').remove();\n                            img.find('.thumbnail').before('<button type=\"button\" class=\"btn btn-danger remove\">' +\n                                '<span class=\"glyphicon glyphicon-remove\"></span>' +\n                                '</button>').addClass('zoomable');\n                            img.find('button').on('click', function () {\n                                _this.unchoseImage(data.id);\n                            });\n                            $('#' + _this.dom_id).append('<input type=\"hidden\" name=\"' + _this.inputName + '\" value=\"' + data.id + '\"/>');\n                            _this.chosenImages.push(data.id);\n                        });\n                    },\n                    error: function (err) {\n                        image.done(function (img) {\n                            if (!img.data('tried')) {\n                                img.data('tried', true);\n                                img.find('.thumbnail').before('<button type=\"button\" class=\"btn btn-success retry\">' +\n                                    '<span class=\"glyphicon glyphicon-refresh\"></span>' +\n                                    '</button>' +\n                                    '<button type=\"button\" class=\"btn btn-danger remove\">' +\n                                    '<span class=\"glyphicon glyphicon-remove\"></span>' +\n                                    '</button>');\n                                img.addClass('error').find('button.retry').on('click', function () { $.ajax(ajaxOpts); });\n                                img.find('button.remove').on('click', function () {\n                                    img.remove();\n                                });\n                            }\n                        });\n                    }\n                };\n                $.ajax(ajaxOpts);\n            });\n            _this.closePopups();\n        });\n        $('#' + this.dom_id + ' .imagewidget-zoom > .img-port').on('click', function () { _this.closePopups(); });\n        var $inp = $('input[data-imagewidget]');\n        $inp.data('value', JSON.stringify($inp.val()));\n    }\n    ImageWidget.prototype.zoom = function (id) {\n        $('body').css('overflow', 'hidden');\n        var $backlight = $('#' + this.dom_id + ' .imagewidget-backlight'), $zoom = $backlight.find('.imagewidget-zoom');\n        $backlight.removeClass('closed');\n        $zoom.removeClass('closed').find('img').attr('src', '/images' + this.images[id].lg_path);\n        $zoom.find('.img-port').css('background-image', \"url('/images\" + this.images[id].lg_path + \"')\");\n    };\n    ImageWidget.prototype.choseImage = function (id) {\n        var _this = this;\n        if (this.chosenImages.indexOf(id) !== -1) {\n            return;\n        }\n        $('#' + this.dom_id).append('<input type=\"hidden\" name=\"' + this.inputName + '\" value=\"' + id + '\"/>');\n        this.chosenImages.push(id);\n        $('#' + this.dom_id + ' .imagewidget-library-image[data-id=' + id + ']').addClass('chosen');\n        $('#' + this.dom_id + ' .imagewidget-input .imagewidget-add-image').before('<div class=\"col col-xs-6 col-sm-4 col-md-3 col-lg-2 imagewidget-input-image\" data-id=\"' + id + '\">' +\n            '<button type=\"button\" class=\"btn btn-danger remove\">' +\n            '<span class=\"glyphicon glyphicon-remove\"></span>' +\n            '</button>' +\n            '<div class=\"thumbnail zoomable\">' +\n            '<img src=\"/images' + this.images[id].sm_path + '\">' +\n            '</div>' +\n            '</div>');\n        $('#' + this.dom_id + ' .imagewidget-input-image[data-id=' + id + '] button.remove').on('click', function (evt) {\n            _this.unchoseImage(parseInt($(evt.currentTarget.parentElement).data('id')));\n        });\n        if (!this.multiply) {\n            $('#' + this.dom_id + ' .imagewidget-input .imagewidget-add-image').hide();\n        }\n    };\n    ImageWidget.prototype.unchoseImage = function (id) {\n        $('#' + this.dom_id + ' .imagewidget-library-image.chosen[data-id=' + id + ']').removeClass('chosen');\n        $('#' + this.dom_id + ' .imagewidget-input-image[data-id=' + id + ']').remove();\n        $('#' + this.dom_id + ' [name=\"' + this.inputName + '\"][value=' + id + ']').remove();\n        this.chosenImages.splice(this.chosenImages.indexOf(id), 1);\n        if (!this.multiply) {\n            $('#' + this.dom_id + ' .imagewidget-input .imagewidget-add-image').show();\n        }\n    };\n    ImageWidget.prototype.unchoseImages = function () {\n        var _this = this;\n        var currentImages = [];\n        $('#' + this.dom_id + ' [name=\"' + this.inputName + '\"]').each(function () {\n            currentImages.push(parseInt($(_this).val()));\n        });\n        for (var i = 0; i < currentImages.length; i++) {\n            this.unchoseImage(currentImages[i]);\n        }\n    };\n    ImageWidget.prototype.renderLibrary = function (pagination) {\n        var _this = this;\n        if (pagination === void 0) { pagination = 0; }\n        var images = this.images, $library = $('#' + this.dom_id + ' .imagewidget-popup'), $images_container = $library.find('.imagewidget-popup-content').empty(), $pagination = $library.find('.pagination').empty(), imagesCount = 0;\n        if ($images_container.width() === 0) {\n            return;\n        }\n        for (var i in images) {\n            if (images.hasOwnProperty(i)) {\n                imagesCount++;\n            }\n        }\n        var imagesPerPage = Math.floor($images_container.width() / 240), maxPagination = Math.ceil(imagesCount / imagesPerPage);\n        for (var i = 0; i < maxPagination; i++) {\n            $pagination.append('<li data-pagination-num=\"' + i + '\" class=\"' + (pagination == i ? 'active' : '') + '\"><a>' + (i + 1) + '</a></li>');\n            $pagination.find('li[data-pagination-num=\"' + i + '\"]').on('click', function (evt) {\n                var newPagination = parseInt($((evt).target.parentElement).data('pagination-num'));\n                _this.renderLibrary(newPagination);\n            });\n        }\n        var index = imagesPerPage * pagination, counter = 0;\n        for (var img_id in images) {\n            if (images.hasOwnProperty(img_id)) {\n                var image = images[img_id];\n                if (counter >= index && counter < (index + imagesPerPage)) {\n                    $images_container.append('<div class=\"col thumbnail imagewidget-library-image ' +\n                        (this.chosenImages.indexOf(image.id) !== -1 ? 'chosen' : '') + '\" data-id=\"' + img_id + '\">' +\n                        '<img src=\"/images' + image['sm_path'] + '\" />' +\n                        '</div>');\n                }\n                counter++;\n            }\n        }\n        if ($images_container.data('evt_handler') !== true) {\n            $images_container.data('evt_handler', true);\n            $images_container.on('click', '.thumbnail', function (evt) {\n                var target = evt.currentTarget;\n                if ($(target).hasClass('chosen')) {\n                    _this.unchoseImage(parseInt($(target).data('id')));\n                }\n                else {\n                    _this.choseImage(parseInt($(target).data('id')));\n                }\n            });\n        }\n    };\n    ImageWidget.prototype.addImage = function (data) {\n        this.images[data.id] = {\n            id: data.id,\n            lg_path: data.lg_path,\n            md_path: data.md_path,\n            sm_path: data.sm_path,\n            group: data.group\n        };\n    };\n    ImageWidget.prototype.closePopups = function () {\n        $('body').css('overflow', 'initial');\n        $('#' + this.dom_id + ' .imagewidget-backlight').addClass('closed').children().addClass('closed');\n    };\n    ImageWidget.prototype.openLibrary = function () {\n        $('body').css('overflow', 'hidden');\n        $('#' + this.dom_id + ' .imagewidget-backlight').removeClass('closed').find('.imagewidget-popup').removeClass('closed');\n        this.renderLibrary();\n    };\n    return ImageWidget;\n}());\nexports.ImageWidget = ImageWidget;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,")},function(module,exports,__webpack_require__){"use strict";eval("\nexports.__esModule = true;\n__webpack_require__(0);\nvar ImageWidget_1 = __webpack_require__(1);\nwindow.ImageWidget = ImageWidget_1.ImageWidget;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi90cy9hcHAudHM/YmRkZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5yZXF1aXJlKFwiLi4vc3R5bC9tYWluLnN0eWxcIik7XG52YXIgSW1hZ2VXaWRnZXRfMSA9IHJlcXVpcmUoXCIuL0ltYWdlV2lkZ2V0XCIpO1xud2luZG93LkltYWdlV2lkZ2V0ID0gSW1hZ2VXaWRnZXRfMS5JbWFnZVdpZGdldDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vdHMvYXBwLnRzXG4vLyBtb2R1bGUgaWQgPSAyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=")}]);